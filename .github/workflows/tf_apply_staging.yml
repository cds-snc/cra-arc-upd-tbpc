name: "Terraform apply staging"

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "terragrunt/**"
      - "!terragrunt/env/staging/**"
      - ".github/workflows/tf_apply_staging.yml"

env:
  AWS_REGION: ca-central-1
  TERRAFORM_VERSION: 1.11.2 # Align with plan workflow
  TERRAGRUNT_VERSION: 0.75.6 # Align with plan workflow

permissions:
  id-token: write
  contents: read
  pull-requests: write
  actions: write
  checks: write
  statuses: write

jobs:
  terragrunt-apply:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform Tools
        uses: cds-snc/terraform-tools-setup@v1

      - name: Configure aws credentials using OIDC
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          role-to-assume: arn:aws:iam::211125499457:role/cra-arc-upd-tbpc-apply
          role-session-name: TFApply
          aws-region: ${{ env.AWS_REGION }}

      # Commenting out the apply steps since the directories don't exist yet
      # - name: Apply s3
      #   working-directory: terragrunt/env/staging/s3
      #   run: terragrunt apply --terragrunt-non-interactive -auto-approve

      # - name: Apply iam
      #   working-directory: terragrunt/env/staging/iam
      #   run: terragrunt apply --terragrunt-non-interactive -auto-approve

      # Placeholder step to prevent workflow failure
      - name: Placeholder - No Terraform modules to apply yet
        run: echo "No Terraform modules to apply yet. Add modules to terragrunt/env/staging/ and uncomment the apply steps."
