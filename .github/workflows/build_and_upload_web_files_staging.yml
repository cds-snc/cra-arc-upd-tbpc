name: Build and upload web files - Staging

on:
  workflow_dispatch:
  workflow_run:
    workflows: ['Terraform apply - Staging']
    types:
      - completed
  push:
    branches:
      - main

env:
  AWS_REGION: ca-central-1
  TERRAFORM_VERSION: 1.11.2
  TERRAGRUNT_VERSION: 0.78.0
  NX_CLOUD_DISTRIBUTED_EXECUTION: true
  NX_CLOUD_DISTRIBUTED_EXECUTION_AGENT_COUNT: 3

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
    name: Nx Cloud - Build web - Main Job
    if: github.repository == 'cds-snc/cra-arc-upd-tbpc' && (github.event_name == 'push' || github.event.workflow_run.conclusion == 'success')
    uses: ./.github/workflows/nx-cloud-main.yml
    secrets:
      NX_CLOUD_AUTH_TOKEN: ${{ secrets.NX_CLOUD_AUTH_TOKEN }}
    with:
      node-version: 22.14.0
      number-of-agents: 3
      # Because separate jobs don't share the same filesystem, we'll upload the build
      # output as an artifact, and then download it in the `upload` job.
      artifacts-name: upd-web-files-staging
      artifacts-path: dist/apps/upd
      artifacts-retention-days: 1
      artifacts-overwrite: true
      parallel-commands-on-agents: |
        npx nx run upd:build --parallel=3 --prod

  agents:
    name: Nx Cloud - Build web - Agents
    if: github.repository == 'cds-snc/cra-arc-upd-tbpc'
    uses: nrwl/ci/.github/workflows/nx-cloud-agents.yml@v0.15.0
    secrets:
      NX_CLOUD_AUTH_TOKEN: ${{ secrets.NX_CLOUD_AUTH_TOKEN }}
    with:
      node-version: 22.14.0
      number-of-agents: 3

  upload:
    name: Upload web files to S3
    if: github.repository == 'cds-snc/cra-arc-upd-tbpc'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: upd-web-files-staging
          path: dist/apps/upd

      - name: Setup Terraform Tools
        uses: cds-snc/terraform-tools-setup@v1

      - name: Configure aws credentials using OIDC
        uses: aws-actions/configure-aws-credentials@b47578312673ae6fa5b5096b330d9fbac3d116df # v4.2.1
        with:
          role-to-assume: arn:aws:iam::211125499457:role/S3WebReadWriteRole
          role-session-name: TFApply-uploadWebFiles
          aws-region: ${{ env.AWS_REGION }}

      - name: Upload web files to S3
        working-directory: terragrunt/env/staging/s3_web_files
        run: terragrunt apply --terragrunt-non-interactive -auto-approve
