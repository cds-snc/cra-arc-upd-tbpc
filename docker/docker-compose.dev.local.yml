services:
  nginx:
    image: "upd_nginx"
    network_mode: host
    extra_hosts:
        - "web:127.0.0.1"
    build:
      context: ../
      dockerfile: docker/performance_base/Dockerfile
      target: nginx-dev
    ports:
      - "8080:8080"
    depends_on:
      - web
    restart: unless-stopped
    container_name: upd_nginx

  web:
    image: "upd_web"
    network_mode: host
    extra_hosts:
        - "redis:127.0.0.1"
    container_name: upd_web
    restart: unless-stopped
    build:
      context: ../
      dockerfile: docker/performance_base/Dockerfile
      target: web-dev
      network: host
    secrets:
      - .env
      - secret.pem
      - aa_creds_pool.json
    environment:
      DOTENV_CONFIG_PATH: /run/secrets/.env
      AA_KEY_PATH: /run/secrets/secret.pem
      AA_KEY_POOL_PATH: /run/secrets/aa_creds_pool.json
      PORT: 9321
      INSTANCE_ID: "docker-dev-001"
      NODE_OPTIONS: "--max-old-space-size=8192"
      DB_HOST: "localhost"
    # depends_on:
    #   - mongodb

  db-updater:
    image: "upd_db-updater"
    container_name: upd_db-updater
    network_mode: host
    restart: unless-stopped
    build:
      context: ../
      dockerfile: docker/performance_base/Dockerfile
      target: db-updater-dev
    secrets:
      - .env
      - secret.pem
      - service-account-credentials.json
    environment:
      DOTENV_CONFIG_PATH: /run/secrets/.env
      AA_KEY_PATH: /run/secrets/secret.pem
      GOOGLE_APPLICATION_CREDENTIALS: /run/secrets/service-account-credentials.json
      DB_HOST: "localhost"
#    depends_on:
#      - mongodb

  # mongodb:
  #   image: mongo:7.0.5-jammy
  #   pull_policy: if_not_present
  #   container_name: upd_mongo
  #   restart: unless-stopped
  #   volumes:
  #     - type: volume
  #       source: db-data
  #       target: /data
  #       volume:
  #         nocopy: true

  redis:
    image: redis:7.2.4
    pull_policy: if_not_present
    command: "redis-server --appendonly yes --maxmemory-policy noeviction"
    ports:
      - "6379:6379"

# volumes:
#   db-data:
#     driver: local
#     driver_opts:
#       o: bind
#       type: none
#       device: "D:/docker-db"

secrets:
  .env:
    file: ../.env
  secret.pem:
    file: ../keys/secret.pem
  aa_creds_pool.json:
    file: ../keys/aa_creds_pool.json
  service-account-credentials.json:
    file: ../keys/service-account-credentials.json
